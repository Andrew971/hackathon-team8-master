AWSTemplateFormatVersion: "2010-09-09"
Description: Create a Docker CI/CD pipeline with CodePipeline, CodeBuild and ECR
Parameters:
  KMSKeyArn:
    Type: String
    Description: Name the bucket used for storing the Pipeline Artifacts.
    MaxLength: 350
    MinLength: 5
  KMSKeyID:
    Type: String
    Description: Name the bucket used for storing the Pipeline Artifacts.
    MaxLength: 350
    MinLength: 5
  ArtifactStoreBucketName:
    Type: String
    Description: Name the bucket used for storing the Pipeline Artifacts.
    MaxLength: 50
    MinLength: 5
  KMSKeyArnRegional:
    Type: String
    Description: Name the bucket used for storing the Pipeline Artifacts.
    MaxLength: 350
    MinLength: 5
  KMSKeyIDRegional:
    Type: String
    Description: Name the bucket used for storing the Pipeline Artifacts.
    MaxLength: 350
    MinLength: 5
  ArtifactStoreBucketNameRegional:
    Type: String
    Description: Name the bucket used for storing the Pipeline Artifacts.
    MaxLength: 50
    MinLength: 5
  AuthorizerLogicalId:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  CognitoPoolID:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  CognitoClientID:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PipelineName:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  ProjectName:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PipelineStackName:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PipelineBuildSpecFileName:
    Default: buildspec.yaml
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PathRole:
    Default: /
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PipelineChangeSetName:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  AuthenticationTopicArn:
    Default: outPutfile.yaml
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PipelineOutputFileName:
    Default: outPutfile.yaml
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  PipelineDescription:
    Default: project description
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  GitHubOwner:
    Default: mozilla-iam
    Description: The owner or organization for the GitHub project
    Type: String
  ApiLogicalId:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  ApiRootResource:
    Default: generic-project-name
    Description: The name for the project associated with this pipeline (used to namespace resources)
    Type: String
  GitHubRepo:
    Default: sso-dashboard
    Description: The GitHub repository name
    Type: String
  GitHubBranch:
    Default: master
    Description: The GitHub repository name
    Type: String
  GitHubToken:
    Description: The GitHub repository name
    Type: String
    NoEcho: true
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "General Settings"
        Parameters:
          - PathRole
          - KMSKeyID
          - KMSKeyArn
      - Label:
          default: "Bucket Settings"
        Parameters:
          - ArtifactStoreBucketName
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName

      - Label:
          default: " Resources Pipeline Settings"
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - ProjectName
          - PipelineDescription
          - PipelineBuildSpecFileName
          - PipelineOutputFileName
          - PipelineStackName
          - PipelineChangeSetName

      - Label:
          default: "GitHub Settings"
        Parameters:
          - GitHubOwner
          - GitHubToken

Resources:

  CodeBuildProjectService:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub ${ProjectName}-Codebuild
      Description: !Ref PipelineDescription
      ServiceRole: !GetAtt CodeBuildRole.Arn
      EncryptionKey: !Ref KMSKeyArn
      Artifacts: 
        Type: CODEPIPELINE
      Cache: 
        Modes: 
          - LOCAL_SOURCE_CACHE
          - LOCAL_CUSTOM_CACHE
        Type: LOCAL
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: ARTIFACT_STORE
          Value: !Ref ArtifactStoreBucketName
        - Name: KMS_KEY_ID
          Value: !Ref KMSKeyID
      Source: 
        BuildSpec: !Ref PipelineBuildSpecFileName
        Type: CODEPIPELINE
      Tags: 
        - Key : Application
          Value: Code Pipeline
      TimeoutInMinutes: 60

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies: 
        - PolicyName: !Sub ${ProjectName}-codebuild-policy
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Resource:
                - arn:aws:logs:*:*:*
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:GetObjectVersion
              Resource:
                - !Sub arn:aws:s3:::${ArtifactStoreBucketName}/*
                - !Sub arn:aws:s3:::${ArtifactStoreBucketName}
            - Effect: Allow
              Action:
                - ssm:*
              Resource: '*'
            - Effect: Allow
              Action:
              - kms:*
              Resource: !Ref KMSKeyArn
      Path: !Ref PathRole
      RoleName: !Sub ${ProjectName}-codebuild-role

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      artifactStores:
        - ArtifactStore : 
            EncryptionKey: 
              Id: !Ref KMSKeyArn
              Type: KMS
            Location: !Ref ArtifactStoreBucketName
            Type: S3
          Region : us-east-1
        - ArtifactStore : 
            EncryptionKey: 
              Id: !Ref KMSKeyArnRegional
              Type: KMS
            Location: !Ref ArtifactStoreBucketNameRegional
            Type: S3
          Region : ca-central-1
      Name: !Ref PipelineName
      RoleArn: !GetAtt [PipelineRole, Arn]
      RestartExecutionOnUpdate: false
      Stages:
        - Name: Source
          Actions:
            - Name: !Sub ${ProjectName}
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: !Sub ${ProjectName}-source
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: !Sub ${ProjectName}
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Sub ${ProjectName}-Codebuild
              InputArtifacts:
                - Name: !Sub ${ProjectName}-source
              OutputArtifacts:
                - Name: !Sub ${ProjectName}-Build
              RunOrder: 1
        - Name: Validate
          Actions:
            - Name: !Sub ${ProjectName}-ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref PipelineStackName
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: !Sub 
                  - | 
                      {
                        "GitHubToken": "${GitHubToken}",
                        "GitHubOwner": "${GitHubOwner}",
                        "AuthenticationTopicArn": "${AuthenticationTopicArn}",
                        "ApiLogicalId": "${ApiLogicalId}",
                        "ApiRootResource": "${ApiRootResource}",
                        "AuthorizerLogicalId": "${AuthorizerLogicalId}",
                        "CognitoPoolID": "${CognitoPoolID}",
                        "CognitoClientID": "${CognitoClientID}"
                      }
                  - GitHubToken: !Ref GitHubToken
                    GitHubOwner: !Ref GitHubOwner
                    AuthenticationTopicArn: !Ref AuthenticationTopicArn
                    ApiLogicalId: !Ref ApiLogicalId
                    ApiRootResource: !Ref ApiRootResource
                    AuthorizerLogicalId: !Ref AuthorizerLogicalId
                    CognitoPoolID: !Ref CognitoPoolID
                    CognitoClientID: !Ref CognitoClientID
                ChangeSetName: !Ref PipelineChangeSetName
                RoleArn: !GetAtt LambdaExecutionIAMRole.Arn
                TemplatePath: !Sub ${ProjectName}-Build::${PipelineOutputFileName}
              InputArtifacts:
                - Name: !Sub ${ProjectName}-Build
              RunOrder: 1
              Region: us-east-1
        - Name: Deploy
          Actions:
            - Name: !Sub ${ProjectName}-Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref PipelineStackName
                ChangeSetName: !Ref PipelineChangeSetName
                OutputFileName: !Sub ${ProjectName}-Output
                TemplatePath: !Sub ${ProjectName}-Build::${PipelineOutputFileName}
                RoleArn: !GetAtt LambdaExecutionIAMRole.Arn
              InputArtifacts:
                - Name: !Sub ${ProjectName}-Build
              RunOrder: 1
              Region: us-east-1


  LambdaExecutionIAMRole: 
    Type: AWS::IAM::Role
    Properties: 
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AWSLambdaExecute"
      - "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Principal: 
              Service: 
              - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies: 
        - PolicyName: !Sub ${PipelineName}-lambdaExecution-policy
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
              - s3:PutObject
              - s3:GetObject
              - iam:PassRole
              - s3:GetBucketVersioning
              - cloudformation:CreateChangeSet
              - s3:GetObjectVersion
              - logs:* 
              - dynamodb:*
              - cloudwatch:*
              Resource: "*"
            - Sid: VisualEditor1
              Effect: Allow
              Action:
              - iam:GetRole
              - codedeploy:CreateApplication
              - apigateway:*
              - codedeploy:RegisterApplicationRevision
              - iam:CreateRole
              - iam:DeleteRole
              - codedeploy:DeleteApplication
              - iam:PutRolePolicy
              Resource:
              - !Sub arn:aws:apigateway:${AWS::Region}::*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:*
            - Sid: VisualEditor2
              Effect: Allow
              Action:
              - iam:DetachRolePolicy
              - codedeploy:CreateDeployment
              - iam:DeleteRolePolicy
              - codedeploy:GetDeployment
              - iam:AttachRolePolicy
              - codedeploy:CreateDeploymentGroup
              Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:*
            - Sid: VisualEditor3
              Effect: Allow
              Action: codedeploy:GetDeploymentConfig
              Resource: !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:*
            - Action:
                - elasticbeanstalk:*
                - ec2:*
                - elasticloadbalancing:*
                - autoscaling:*
                - cloudwatch:*
                - s3:*
                - sns:*
                - cloudformation:*
                - codebuild:*
                - codepipeline:*
                - rds:*
                - sqs:*
                - ecs:*
                - logs:* 
                - dynamodb:*
                - lambda:*
                - cloudfront:*
              Resource: "*"
              Effect: Allow
            - Effect: Allow
              Action:
              - kms:*
              Resource: !Ref KMSKeyArn
            - Effect: Allow
              Action:
              - ssm:*
              Resource: '*'
            - Sid: VisualEditor4
              Effect: Allow
              Action: lambda:*
              Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
      Path: !Ref PathRole
      RoleName: !Sub ${PipelineName}-lambdaExecution-role

  PipelineRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Principal: 
              Service: 
              - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies: 
        - PolicyName: !Sub ${PipelineName}-policy
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Action:
                - iam:PassRole
                Resource: "*"
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                    - cloudformation.amazonaws.com
                    - elasticbeanstalk.amazonaws.com
              - Action:
                - codecommit:CancelUploadArchive
                - codecommit:GetBranch
                - codecommit:GetCommit
                - codecommit:GetUploadArchiveStatus
                - codecommit:UploadArchive
                Resource: "*"
                Effect: Allow
              - Action:
                - codedeploy:CreateDeployment
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:RegisterApplicationRevision
                Resource: "*"
                Effect: Allow
              - Action:
                - elasticbeanstalk:*
                - ec2:*
                - elasticloadbalancing:*
                - autoscaling:*
                - cloudwatch:*
                - s3:*
                - sns:*
                - cloudformation:*
                - rds:*
                - sqs:*
                - ecs:*
                - logs:* 
                - dynamodb:*
                Resource: "*"
                Effect: Allow
              - Action:
                - lambda:InvokeFunction
                - lambda:ListFunctions
                Resource: "*"
                Effect: Allow
              - Action:
                - opsworks:CreateDeployment
                - opsworks:DescribeApps
                - opsworks:DescribeCommands
                - opsworks:DescribeDeployments
                - opsworks:DescribeInstances
                - opsworks:DescribeStacks
                - opsworks:UpdateApp
                - opsworks:UpdateStack
                Resource: "*"
                Effect: Allow
              - Action:
                - cloudformation:CreateStack
                - cloudformation:DeleteStack
                - cloudformation:DescribeStacks
                - cloudformation:UpdateStack
                - cloudformation:CreateChangeSet
                - cloudformation:DeleteChangeSet
                - cloudformation:DescribeChangeSet
                - cloudformation:ExecuteChangeSet
                - cloudformation:SetStackPolicy
                - cloudformation:ValidateTemplate
                Resource: "*"
                Effect: Allow
              - Action:
                - codebuild:BatchGetBuilds
                - codebuild:StartBuild
                Resource: "*"
                Effect: Allow
              - Effect: Allow
                Action:
                - devicefarm:ListProjects
                - devicefarm:ListDevicePools
                - devicefarm:GetRun
                - devicefarm:GetUpload
                - devicefarm:CreateUpload
                - devicefarm:ScheduleRun
                Resource: "*"
              - Effect: Allow
                Action:
                - servicecatalog:ListProvisioningArtifacts
                - servicecatalog:CreateProvisioningArtifact
                - servicecatalog:DescribeProvisioningArtifact
                - servicecatalog:DeleteProvisioningArtifact
                - servicecatalog:UpdateProduct
                Resource: "*"
              - Effect: Allow
                Action:
                - cloudformation:ValidateTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                - kms:*
                Resource: !Ref KMSKeyArn

      Path: !Ref PathRole
      RoleName: !Sub ${PipelineName}-role

Outputs:
  BuildProjectLogicalId:
    Value: !Ref CodeBuildProjectService
  BuildProjectArn:
    Value: !GetAtt  CodeBuildProjectService.Arn
  PipelineLogicalId:
    Value: !Ref Pipeline
  PipelineVersion:
    Value: !GetAtt  Pipeline.Version 

